name: CI/CD

on:
  push:
    branches: [main]

jobs:
  backend:
    name: Backend Build and Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Backend Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build Backend
        run: |
          cd TravelHub-Backend
          mvn clean package -DskipTests

      - name: Build Backend Docker image
        run: |
          cd TravelHub-Backend
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest .

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push Backend Docker image to Azure Container Registry
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest

  frontend:
    name: Frontend Build and Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Frontend Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build Frontend
        run: |
          cd TravelHub-frontend
          npm install
          ng build --configuration=production

      - name: Build Frontend Docker image
        run: |
          cd TravelHub-frontend
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest .

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push Frontend Docker image to Azure Container Registry
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest

  deploy:
    name: Deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Deploy Backend and Frontend Docker images to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: travelhubweb
          slot-name: production # Optional: specify deployment slot
          images: |
            ${{ secrets.ACR_NAME }}.azurecr.io/backend:latest
            ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest
