name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
           cd TravelHub-Backend
           docker build -t reshma784/my-spring-boot-app .

      - name: Push Docker image to Docker Hub
        run: docker push reshma784/my-spring-boot-app

  deploy:
    name: Deploy Docker Container
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Docker image from Docker Hub
        run: docker pull reshma784/my-spring-boot-app

      - name: Run Docker container
        run: docker run -d -p 8080:8080 reshma784/my-spring-boot-app

  frontend:
    name: Frontend Build and Deployment
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout Frontend Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Build Frontend Docker image
        run: |
          cd TravelHub-frontend
          npm install
          ng build --configuration=production
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest .

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push Frontend Docker image to Azure Container Registry
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/frontend:latest
